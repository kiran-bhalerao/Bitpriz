{"version":3,"file":"static/webpack/static/development/pages/_app.js.487f5e02a3b7f605f8e8.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["// pages/_app.js\nimport React from \"react\"\nimport { createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport App, { Container } from \"next/app\"\nimport withRedux from \"next-redux-wrapper\"\nimport { CHANGE_COUNTRY } from \"../actions/types\"\n\nconst reducer = (state = null, action) => {\n  switch (action.type) {\n    case CHANGE_COUNTRY:\n      return action.payload\n    default:\n      return state\n  }\n}\ncountry\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState)\n}\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {}\n\n    return { pageProps }\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props\n    return (\n      <Container>\n        <Provider store={store}>\n          <Component {...pageProps} />\n        </Provider>\n      </Container>\n    )\n  }\n}\n\nexport default withRedux(makeStore)(MyApp)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAJA;AAMA;AACA;AAAA;AAEA;;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AASA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;AAjBA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AAAA;AACA;;AAHA;AAIA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAPA;AACA;AAoBA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}